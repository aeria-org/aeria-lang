// Generated by purs version 0.15.15
import * as $foreign from "./foreign.js";
import * as Data_Either from "../Data.Either/index.js";
import * as Data_Functor from "../Data.Functor/index.js";
import * as Effect_Uncurried from "../Effect.Uncurried/index.js";
var map = /* #__PURE__ */ Data_Functor.map(Data_Functor.functorArray);
var EventHandle = /* #__PURE__ */ (function () {
    function EventHandle(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    EventHandle.create = function (value0) {
        return function (value1) {
            return new EventHandle(value0, value1);
        };
    };
    return EventHandle;
})();
var subscribeSameFunction = function (onXFn, eventEmitter, eventName, jsCb) {
    onXFn(eventEmitter, eventName, jsCb);
    return function () {
        return $foreign.unsafeOff(eventEmitter, eventName, jsCb);
    };
};
var setMaxListeners = function (max) {
    return function (emitter) {
        return function () {
            return $foreign.setMaxListenersImpl(emitter, max);
        };
    };
};
var setUnlimitedListeners = /* #__PURE__ */ setMaxListeners(0);
var removeListenerH = /* #__PURE__ */ (function () {
    return new EventHandle("removeListener", function (cb) {
        return function (jsSymbol) {
            return cb($foreign.symbolOrStr(Data_Either.Left.create, Data_Either.Right.create, jsSymbol))();
        };
    });
})();
var prependOnceListener_ = function (v) {
    return function (psCb) {
        return function (eventEmitter) {
            return function () {
                return $foreign.unsafePrependOnceListener(eventEmitter, v.value0, v.value1(psCb));
            };
        };
    };
};
var prependOnceListener = function (v) {
    return function (psCb) {
        return function (eventEmitter) {
            return function () {
                return subscribeSameFunction($foreign.unsafePrependOnceListener, eventEmitter, v.value0, v.value1(psCb));
            };
        };
    };
};
var prependListener_ = function (v) {
    return function (psCb) {
        return function (eventEmitter) {
            return function () {
                return $foreign.unsafePrependListener(eventEmitter, v.value0, v.value1(psCb));
            };
        };
    };
};
var prependListener = function (v) {
    return function (psCb) {
        return function (eventEmitter) {
            return function () {
                return subscribeSameFunction($foreign.unsafePrependListener, eventEmitter, v.value0, v.value1(psCb));
            };
        };
    };
};
var once_ = function (v) {
    return function (psCb) {
        return function (eventEmitter) {
            return function () {
                return $foreign.unsafeOnce(eventEmitter, v.value0, v.value1(psCb));
            };
        };
    };
};
var once = function (v) {
    return function (psCb) {
        return function (eventEmitter) {
            return function () {
                return subscribeSameFunction($foreign.unsafeOnce, eventEmitter, v.value0, v.value1(psCb));
            };
        };
    };
};
var on_ = function (v) {
    return function (psCb) {
        return function (eventEmitter) {
            return function () {
                return $foreign.unsafeOn(eventEmitter, v.value0, v.value1(psCb));
            };
        };
    };
};
var on = function (v) {
    return function (psCb) {
        return function (eventEmitter) {
            return function () {
                return subscribeSameFunction($foreign.unsafeOn, eventEmitter, v.value0, v.value1(psCb));
            };
        };
    };
};
var newListenerH = /* #__PURE__ */ (function () {
    return new EventHandle("newListener", function (cb) {
        return function (jsSymbol) {
            return cb($foreign.symbolOrStr(Data_Either.Left.create, Data_Either.Right.create, jsSymbol))();
        };
    });
})();
var listenerCount = function (emitter) {
    return function (eventName) {
        return function () {
            return $foreign.listenerCountImpl(emitter, eventName);
        };
    };
};
var getMaxListeners = /* #__PURE__ */ Effect_Uncurried.runEffectFn1($foreign.getMaxListenersImpl);
var eventNames = function (ee) {
    return map(function (x) {
        return $foreign.symbolOrStr(Data_Either.Left.create, Data_Either.Right.create, x);
    })($foreign.eventNamesImpl(ee));
};
export {
    new,
    unsafeEmitFn
} from "./foreign.js";
export {
    eventNames,
    getMaxListeners,
    listenerCount,
    setMaxListeners,
    setUnlimitedListeners,
    EventHandle,
    newListenerH,
    removeListenerH,
    on,
    on_,
    once,
    once_,
    prependListener,
    prependListener_,
    prependOnceListener,
    prependOnceListener_
};
