// Generated by purs version 0.15.13
import * as Aeria_Environment from "../Aeria.Environment/index.js";
import * as Aeria_Syntax_Tree from "../Aeria.Syntax.Tree/index.js";
import * as Control_Applicative from "../Control.Applicative/index.js";
import * as Control_Bind from "../Control.Bind/index.js";
import * as Control_Monad_Error_Class from "../Control.Monad.Error.Class/index.js";
import * as Control_Monad_Except from "../Control.Monad.Except/index.js";
import * as Control_Monad_Except_Trans from "../Control.Monad.Except.Trans/index.js";
import * as Control_Monad_Reader_Class from "../Control.Monad.Reader.Class/index.js";
import * as Control_Monad_Reader_Trans from "../Control.Monad.Reader.Trans/index.js";
import * as Data_Array from "../Data.Array/index.js";
import * as Data_Boolean from "../Data.Boolean/index.js";
import * as Data_Either from "../Data.Either/index.js";
import * as Data_Eq from "../Data.Eq/index.js";
import * as Data_Foldable from "../Data.Foldable/index.js";
import * as Data_Generic_Rep from "../Data.Generic.Rep/index.js";
import * as Data_Identity from "../Data.Identity/index.js";
import * as Data_List from "../Data.List/index.js";
import * as Data_List_Types from "../Data.List.Types/index.js";
import * as Data_Map_Internal from "../Data.Map.Internal/index.js";
import * as Data_Maybe from "../Data.Maybe/index.js";
import * as Data_Ord from "../Data.Ord/index.js";
import * as Data_Show from "../Data.Show/index.js";
import * as Data_Show_Generic from "../Data.Show.Generic/index.js";
import * as Data_Tuple from "../Data.Tuple/index.js";
import * as Data_Unit from "../Data.Unit/index.js";
var $runtime_lazy = function (name, moduleName, init) {
    var state = 0;
    var val;
    return function (lineNumber) {
        if (state === 2) return val;
        if (state === 1) throw new ReferenceError(name + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
        state = 1;
        val = init();
        state = 2;
        return val;
    };
};
var bindReaderT = /* #__PURE__ */ Control_Monad_Reader_Trans.bindReaderT(/* #__PURE__ */ Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity));
var bind = /* #__PURE__ */ Control_Bind.bind(bindReaderT);
var monadExceptT = /* #__PURE__ */ Control_Monad_Except_Trans.monadExceptT(Data_Identity.monadIdentity);
var ask = /* #__PURE__ */ Control_Monad_Reader_Class.ask(/* #__PURE__ */ Control_Monad_Reader_Trans.monadAskReaderT(monadExceptT));
var applicativeReaderT = /* #__PURE__ */ Control_Monad_Reader_Trans.applicativeReaderT(/* #__PURE__ */ Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity));
var pure = /* #__PURE__ */ Control_Applicative.pure(applicativeReaderT);
var genericShowConstructor = /* #__PURE__ */ Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments);
var genericShowArgsArgument = /* #__PURE__ */ Data_Show_Generic.genericShowArgsArgument(Aeria_Syntax_Tree.showTyp);
var genericShowConstructor1 = /* #__PURE__ */ Data_Show_Generic.genericShowConstructor(/* #__PURE__ */ Data_Show_Generic.genericShowArgsProduct(genericShowArgsArgument)(genericShowArgsArgument));
var genericShowConstructor2 = /* #__PURE__ */ Data_Show_Generic.genericShowConstructor(/* #__PURE__ */ Data_Show_Generic.genericShowArgsArgument(Aeria_Syntax_Tree.showPropertyName));
var throwError = /* #__PURE__ */ Control_Monad_Error_Class.throwError(/* #__PURE__ */ Control_Monad_Reader_Trans.monadThrowReaderT(/* #__PURE__ */ Control_Monad_Except_Trans.monadThrowExceptT(Data_Identity.monadIdentity)));
var traverse_ = /* #__PURE__ */ Data_Foldable.traverse_(applicativeReaderT)(Data_List_Types.foldableList);
var fromFoldable = /* #__PURE__ */ Data_List.fromFoldable(Data_Foldable.foldableArray);
var elem = /* #__PURE__ */ Data_Array.elem(Data_Eq.eqString);
var when = /* #__PURE__ */ Control_Applicative.when(applicativeReaderT);
var eq = /* #__PURE__ */ Data_Eq.eq(/* #__PURE__ */ Data_Maybe.eqMaybe(Aeria_Syntax_Tree.eqProperty));
var discard = /* #__PURE__ */ Control_Bind.discard(Control_Bind.discardUnit)(bindReaderT);
var pure1 = /* #__PURE__ */ Control_Applicative.pure(Data_Either.applicativeEither);
var lookup = /* #__PURE__ */ Data_Map_Internal.lookup(Data_Ord.ordString);
var traverse_1 = /* #__PURE__ */ Data_Foldable.traverse_(Data_Either.applicativeEither)(Data_List_Types.foldableList);
var fromFoldable1 = /* #__PURE__ */ Data_Map_Internal.fromFoldable(Data_Ord.ordString)(Data_Foldable.foldableArray);
var notEq = /* #__PURE__ */ Data_Eq.notEq(Aeria_Syntax_Tree.eqTyp);
var when1 = /* #__PURE__ */ Control_Applicative.when(Data_Either.applicativeEither);
var foldl = /* #__PURE__ */ Data_Foldable.foldl(Data_List_Types.foldableList);
var local = /* #__PURE__ */ Control_Monad_Reader_Class.local(/* #__PURE__ */ Control_Monad_Reader_Trans.monadReaderReaderT(monadExceptT));
var InvalidAttribute = /* #__PURE__ */ (function () {
    function InvalidAttribute(value0) {
        this.value0 = value0;
    };
    InvalidAttribute.create = function (value0) {
        return new InvalidAttribute(value0);
    };
    return InvalidAttribute;
})();
var AttributeValueMustBe = /* #__PURE__ */ (function () {
    function AttributeValueMustBe(value0) {
        this.value0 = value0;
    };
    AttributeValueMustBe.create = function (value0) {
        return new AttributeValueMustBe(value0);
    };
    return AttributeValueMustBe;
})();
var UnexpectedAttributes = /* #__PURE__ */ (function () {
    function UnexpectedAttributes() {

    };
    UnexpectedAttributes.value = new UnexpectedAttributes();
    return UnexpectedAttributes;
})();
var TypeMismatch = /* #__PURE__ */ (function () {
    function TypeMismatch(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    TypeMismatch.create = function (value0) {
        return function (value1) {
            return new TypeMismatch(value0, value1);
        };
    };
    return TypeMismatch;
})();
var TypesMismatch = /* #__PURE__ */ (function () {
    function TypesMismatch(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    TypesMismatch.create = function (value0) {
        return function (value1) {
            return new TypesMismatch(value0, value1);
        };
    };
    return TypesMismatch;
})();
var ArrayTypeMismatch = /* #__PURE__ */ (function () {
    function ArrayTypeMismatch(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    ArrayTypeMismatch.create = function (value0) {
        return function (value1) {
            return new ArrayTypeMismatch(value0, value1);
        };
    };
    return ArrayTypeMismatch;
})();
var PropertyError = /* #__PURE__ */ (function () {
    function PropertyError(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    PropertyError.create = function (value0) {
        return function (value1) {
            return new PropertyError(value0, value1);
        };
    };
    return PropertyError;
})();
var UndefinedProperty = /* #__PURE__ */ (function () {
    function UndefinedProperty(value0) {
        this.value0 = value0;
    };
    UndefinedProperty.create = function (value0) {
        return new UndefinedProperty(value0);
    };
    return UndefinedProperty;
})();
var InvalidMacroGetter = /* #__PURE__ */ (function () {
    function InvalidMacroGetter(value0) {
        this.value0 = value0;
    };
    InvalidMacroGetter.create = function (value0) {
        return new InvalidMacroGetter(value0);
    };
    return InvalidMacroGetter;
})();
var UndefinedGetter = /* #__PURE__ */ (function () {
    function UndefinedGetter(value0) {
        this.value0 = value0;
    };
    UndefinedGetter.create = function (value0) {
        return new UndefinedGetter(value0);
    };
    return UndefinedGetter;
})();
var ExpectedPropertyExpr = /* #__PURE__ */ (function () {
    function ExpectedPropertyExpr(value0) {
        this.value0 = value0;
    };
    ExpectedPropertyExpr.create = function (value0) {
        return new ExpectedPropertyExpr(value0);
    };
    return ExpectedPropertyExpr;
})();
var Unknown = /* #__PURE__ */ (function () {
    function Unknown() {

    };
    Unknown.value = new Unknown();
    return Unknown;
})();
var Context = /* #__PURE__ */ (function () {
    function Context(value0) {
        this.value0 = value0;
    };
    Context.create = function (value0) {
        return new Context(value0);
    };
    return Context;
})();
var valueType = function (v) {
    if (v instanceof Aeria_Syntax_Tree.VInteger) {
        return Aeria_Syntax_Tree.TInteger.value;
    };
    if (v instanceof Aeria_Syntax_Tree.VFloat) {
        return Aeria_Syntax_Tree.TFloat.value;
    };
    if (v instanceof Aeria_Syntax_Tree.VString) {
        return Aeria_Syntax_Tree.TString.value;
    };
    if (v instanceof Aeria_Syntax_Tree.VBoolean) {
        return Aeria_Syntax_Tree.TBoolean.value;
    };
    if (v instanceof Aeria_Syntax_Tree.VArray) {
        return Aeria_Syntax_Tree.TArray.value;
    };
    if (v instanceof Aeria_Syntax_Tree.VProperty) {
        return Aeria_Syntax_Tree.TProperty.value;
    };
    throw new Error("Failed pattern match at Aeria.Semantic.Monad (line 119, column 1 - line 119, column 26): " + [ v.constructor.name ]);
};
var lookupProperty = function (v) {
    return bind(ask)(function (v1) {
        return pure(Aeria_Environment.lookup(v.value0)(v1.value0.properties));
    });
};
var lookupGetter = function (v) {
    return bind(ask)(function (v1) {
        return pure(Aeria_Environment.lookup(v.value0)(v1.value0.getters));
    });
};
var genericSemanticError = {
    to: function (x) {
        if (x instanceof Data_Generic_Rep.Inl) {
            return new PropertyError(x.value0.value0, x.value0.value1);
        };
        if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
            return new UndefinedProperty(x.value0.value0);
        };
        if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inl)) {
            return new InvalidMacroGetter(x.value0.value0.value0);
        };
        if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0 instanceof Data_Generic_Rep.Inl))) {
            return new UndefinedGetter(x.value0.value0.value0.value0);
        };
        if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))) {
            return new ExpectedPropertyExpr(x.value0.value0.value0.value0.value0);
        };
        if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr)))) {
            return Unknown.value;
        };
        throw new Error("Failed pattern match at Aeria.Semantic.Monad (line 53, column 1 - line 53, column 64): " + [ x.constructor.name ]);
    },
    from: function (x) {
        if (x instanceof PropertyError) {
            return new Data_Generic_Rep.Inl(new Data_Generic_Rep.Product(x.value0, x.value1));
        };
        if (x instanceof UndefinedProperty) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0));
        };
        if (x instanceof InvalidMacroGetter) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0)));
        };
        if (x instanceof UndefinedGetter) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0))));
        };
        if (x instanceof ExpectedPropertyExpr) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0)))));
        };
        if (x instanceof Unknown) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value)))));
        };
        throw new Error("Failed pattern match at Aeria.Semantic.Monad (line 53, column 1 - line 53, column 64): " + [ x.constructor.name ]);
    }
};
var genericPropertyError = {
    to: function (x) {
        if (x instanceof Data_Generic_Rep.Inl) {
            return new InvalidAttribute(x.value0);
        };
        if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
            return new AttributeValueMustBe(x.value0.value0);
        };
        if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inl)) {
            return UnexpectedAttributes.value;
        };
        if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0 instanceof Data_Generic_Rep.Inl))) {
            return new TypeMismatch(x.value0.value0.value0.value0.value0, x.value0.value0.value0.value0.value1);
        };
        if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))) {
            return new TypesMismatch(x.value0.value0.value0.value0.value0.value0, x.value0.value0.value0.value0.value0.value1);
        };
        if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr)))) {
            return new ArrayTypeMismatch(x.value0.value0.value0.value0.value0.value0, x.value0.value0.value0.value0.value0.value1);
        };
        throw new Error("Failed pattern match at Aeria.Semantic.Monad (line 40, column 1 - line 40, column 64): " + [ x.constructor.name ]);
    },
    from: function (x) {
        if (x instanceof InvalidAttribute) {
            return new Data_Generic_Rep.Inl(x.value0);
        };
        if (x instanceof AttributeValueMustBe) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0));
        };
        if (x instanceof UnexpectedAttributes) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)));
        };
        if (x instanceof TypeMismatch) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(new Data_Generic_Rep.Product(x.value0, x.value1)))));
        };
        if (x instanceof TypesMismatch) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(new Data_Generic_Rep.Product(x.value0, x.value1))))));
        };
        if (x instanceof ArrayTypeMismatch) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Product(x.value0, x.value1))))));
        };
        throw new Error("Failed pattern match at Aeria.Semantic.Monad (line 40, column 1 - line 40, column 64): " + [ x.constructor.name ]);
    }
};
var showPropertyError = {
    show: /* #__PURE__ */ Data_Show_Generic.genericShow(genericPropertyError)(/* #__PURE__ */ Data_Show_Generic.genericShowSum(/* #__PURE__ */ Data_Show_Generic.genericShowConstructor(/* #__PURE__ */ Data_Show_Generic.genericShowArgsArgument(Aeria_Syntax_Tree.showName))({
        reflectSymbol: function () {
            return "InvalidAttribute";
        }
    }))(/* #__PURE__ */ Data_Show_Generic.genericShowSum(/* #__PURE__ */ Data_Show_Generic.genericShowConstructor(/* #__PURE__ */ Data_Show_Generic.genericShowArgsArgument(/* #__PURE__ */ Data_List_Types.showList(Data_Show.showString)))({
        reflectSymbol: function () {
            return "AttributeValueMustBe";
        }
    }))(/* #__PURE__ */ Data_Show_Generic.genericShowSum(/* #__PURE__ */ genericShowConstructor({
        reflectSymbol: function () {
            return "UnexpectedAttributes";
        }
    }))(/* #__PURE__ */ Data_Show_Generic.genericShowSum(/* #__PURE__ */ genericShowConstructor1({
        reflectSymbol: function () {
            return "TypeMismatch";
        }
    }))(/* #__PURE__ */ Data_Show_Generic.genericShowSum(/* #__PURE__ */ Data_Show_Generic.genericShowConstructor(/* #__PURE__ */ Data_Show_Generic.genericShowArgsProduct(/* #__PURE__ */ Data_Show_Generic.genericShowArgsArgument(/* #__PURE__ */ Data_List_Types.showList(Aeria_Syntax_Tree.showTyp)))(genericShowArgsArgument))({
        reflectSymbol: function () {
            return "TypesMismatch";
        }
    }))(/* #__PURE__ */ genericShowConstructor1({
        reflectSymbol: function () {
            return "ArrayTypeMismatch";
        }
    })))))))
};
var showSemanticError = {
    show: /* #__PURE__ */ Data_Show_Generic.genericShow(genericSemanticError)(/* #__PURE__ */ Data_Show_Generic.genericShowSum(/* #__PURE__ */ Data_Show_Generic.genericShowConstructor(/* #__PURE__ */ Data_Show_Generic.genericShowArgsProduct(/* #__PURE__ */ Data_Show_Generic.genericShowArgsArgument(Aeria_Syntax_Tree.showProperty))(/* #__PURE__ */ Data_Show_Generic.genericShowArgsArgument(showPropertyError)))({
        reflectSymbol: function () {
            return "PropertyError";
        }
    }))(/* #__PURE__ */ Data_Show_Generic.genericShowSum(/* #__PURE__ */ genericShowConstructor2({
        reflectSymbol: function () {
            return "UndefinedProperty";
        }
    }))(/* #__PURE__ */ Data_Show_Generic.genericShowSum(/* #__PURE__ */ Data_Show_Generic.genericShowConstructor(/* #__PURE__ */ Data_Show_Generic.genericShowArgsArgument(Aeria_Syntax_Tree.showGetters))({
        reflectSymbol: function () {
            return "InvalidMacroGetter";
        }
    }))(/* #__PURE__ */ Data_Show_Generic.genericShowSum(/* #__PURE__ */ genericShowConstructor2({
        reflectSymbol: function () {
            return "UndefinedGetter";
        }
    }))(/* #__PURE__ */ Data_Show_Generic.genericShowSum(/* #__PURE__ */ Data_Show_Generic.genericShowConstructor(/* #__PURE__ */ Data_Show_Generic.genericShowArgsArgument(Aeria_Syntax_Tree.showExpr))({
        reflectSymbol: function () {
            return "ExpectedPropertyExpr";
        }
    }))(/* #__PURE__ */ genericShowConstructor({
        reflectSymbol: function () {
            return "Unknown";
        }
    })))))))
};
var emptyContext = /* #__PURE__ */ (function () {
    return new Context({
        properties: Aeria_Environment.empty,
        getters: Aeria_Environment.empty
    });
})();
var checkTable = /* #__PURE__ */ (function () {
    var go = function (propertyName) {
        return bind(lookupProperty(propertyName))(function (property) {
            if (property instanceof Data_Maybe.Nothing) {
                return bind(lookupGetter(propertyName))(function (getter) {
                    if (getter instanceof Data_Maybe.Nothing) {
                        return throwError(new UndefinedProperty(propertyName));
                    };
                    if (getter instanceof Data_Maybe.Just) {
                        return pure(Data_Unit.unit);
                    };
                    throw new Error("Failed pattern match at Aeria.Semantic.Monad (line 230, column 9 - line 232, column 30): " + [ getter.constructor.name ]);
                });
            };
            if (property instanceof Data_Maybe.Just) {
                return pure(Data_Unit.unit);
            };
            throw new Error("Failed pattern match at Aeria.Semantic.Monad (line 227, column 5 - line 233, column 26): " + [ property.constructor.name ]);
        });
    };
    return traverse_(go);
})();
var checkNumber = function (v) {
    return function (v1) {
        if (v1 instanceof Aeria_Syntax_Tree.VFloat) {
            return new Data_Either.Right(Data_Unit.unit);
        };
        if (v1 instanceof Aeria_Syntax_Tree.VInteger) {
            return new Data_Either.Right(Data_Unit.unit);
        };
        var received = valueType(v1);
        var expected = fromFoldable([ Aeria_Syntax_Tree.TFloat.value, Aeria_Syntax_Tree.TInteger.value ]);
        return new Data_Either.Left(new PropertyError(v, new TypesMismatch(expected, received)));
    };
};
var checkInteger = function (v) {
    return function (v1) {
        if (v1 instanceof Aeria_Syntax_Tree.VInteger) {
            return new Data_Either.Right(Data_Unit.unit);
        };
        var received = valueType(v1);
        return new Data_Either.Left(new PropertyError(v, new TypeMismatch(Aeria_Syntax_Tree.TInteger.value, received)));
    };
};
var checkGetters = /* #__PURE__ */ (function () {
    var go = function (v) {
        if (elem(v.value0.getterMacro.value0.value0)([ "js", "ts" ])) {
            return pure(Data_Unit.unit);
        };
        if (Data_Boolean.otherwise) {
            return throwError(new InvalidMacroGetter(v));
        };
        throw new Error("Failed pattern match at Aeria.Semantic.Monad (line 238, column 3 - line 240, column 57): " + [ v.constructor.name ]);
    };
    return traverse_(go);
})();
var $lazy_checkExpr = /* #__PURE__ */ $runtime_lazy("checkExpr", "Aeria.Semantic.Monad", function () {
    var checkPropertyExists = function (v) {
        return bind(lookupProperty(new Aeria_Syntax_Tree.PropertyName(v.value0)))(function (property) {
            return when(eq(property)(Data_Maybe.Nothing.value))(throwError(new UndefinedProperty(new Aeria_Syntax_Tree.PropertyName(v.value0))));
        });
    };
    var checkExists = function (expr) {
        if (expr instanceof Aeria_Syntax_Tree.EValue && expr.value0 instanceof Aeria_Syntax_Tree.VProperty) {
            return checkPropertyExists(expr.value0.value0);
        };
        return throwError(new ExpectedPropertyExpr(expr));
    };
    var checkBinaryExpr = function (expr) {
        return function (e1) {
            return function (e2) {
                var v = new Data_Tuple.Tuple(e1, e2);
                if (v.value0 instanceof Aeria_Syntax_Tree.EValue && v.value0.value0 instanceof Aeria_Syntax_Tree.VProperty) {
                    return discard(checkPropertyExists(v.value0.value0.value0))(function () {
                        return $lazy_checkExpr(104)(e2);
                    });
                };
                if (v.value1 instanceof Aeria_Syntax_Tree.EValue && v.value1.value0 instanceof Aeria_Syntax_Tree.VProperty) {
                    return discard(checkPropertyExists(v.value1.value0.value0))(function () {
                        return $lazy_checkExpr(107)(e1);
                    });
                };
                return throwError(new ExpectedPropertyExpr(expr));
            };
        };
    };
    var go = function (v) {
        if (v instanceof Aeria_Syntax_Tree.EIn) {
            return checkBinaryExpr(v)(v.value0)(v.value1);
        };
        if (v instanceof Aeria_Syntax_Tree.EEq) {
            return checkBinaryExpr(v)(v.value0)(v.value1);
        };
        if (v instanceof Aeria_Syntax_Tree.ELt) {
            return checkBinaryExpr(v)(v.value0)(v.value1);
        };
        if (v instanceof Aeria_Syntax_Tree.EGt) {
            return checkBinaryExpr(v)(v.value0)(v.value1);
        };
        if (v instanceof Aeria_Syntax_Tree.ELte) {
            return checkBinaryExpr(v)(v.value0)(v.value1);
        };
        if (v instanceof Aeria_Syntax_Tree.EGte) {
            return checkBinaryExpr(v)(v.value0)(v.value1);
        };
        if (v instanceof Aeria_Syntax_Tree.EOr) {
            return discard($lazy_checkExpr(81)(v.value0))(function () {
                return $lazy_checkExpr(82)(v.value1);
            });
        };
        if (v instanceof Aeria_Syntax_Tree.EAnd) {
            return discard($lazy_checkExpr(84)(v.value0))(function () {
                return $lazy_checkExpr(85)(v.value1);
            });
        };
        if (v instanceof Aeria_Syntax_Tree.EExists) {
            return checkExists(v.value0);
        };
        if (v instanceof Aeria_Syntax_Tree.ENot) {
            return $lazy_checkExpr(87)(v.value0);
        };
        if (v instanceof Aeria_Syntax_Tree.EValue) {
            return pure(Data_Unit.unit);
        };
        throw new Error("Failed pattern match at Aeria.Semantic.Monad (line 74, column 3 - line 74, column 51): " + [ v.constructor.name ]);
    };
    return go;
});
var checkExpr = /* #__PURE__ */ $lazy_checkExpr(71);
var checkRequired = /* #__PURE__ */ traverse_(function (v) {
    return bind(lookupProperty(v.value0))(function (property) {
        return discard(when(eq(property)(Data_Maybe.Nothing.value))(throwError(new UndefinedProperty(v.value0))))(function () {
            if (v.value1 instanceof Data_Maybe.Just) {
                return checkExpr(v.value1.value0);
            };
            if (v.value1 instanceof Data_Maybe.Nothing) {
                return pure(Data_Unit.unit);
            };
            throw new Error("Failed pattern match at Aeria.Semantic.Monad (line 218, column 9 - line 220, column 31): " + [ v.value1.constructor.name ]);
        });
    });
});
var checkBooleanProperty = function (v) {
    if (Data_List.length(v.value0.propertyAttributes) > 0) {
        return new Data_Either.Left(new PropertyError(v, UnexpectedAttributes.value));
    };
    if (Data_Boolean.otherwise) {
        return pure1(Data_Unit.unit);
    };
    throw new Error("Failed pattern match at Aeria.Semantic.Monad (line 268, column 1 - line 268, column 62): " + [ v.constructor.name ]);
};
var checkBoolean = function (v) {
    return function (v1) {
        if (v1 instanceof Aeria_Syntax_Tree.VBoolean) {
            return new Data_Either.Right(Data_Unit.unit);
        };
        var received = valueType(v1);
        return new Data_Either.Left(new PropertyError(v, new TypeMismatch(Aeria_Syntax_Tree.TBoolean.value, received)));
    };
};
var checkAttributes = function (v) {
    return function (validations) {
        var check = function (v1) {
            var v2 = lookup(v1.value0.value0)(validations);
            if (v2 instanceof Data_Maybe.Just) {
                return v2.value0(v)(v1.value1);
            };
            if (v2 instanceof Data_Maybe.Nothing) {
                return new Data_Either.Left(new PropertyError(v, new InvalidAttribute(v1.value0)));
            };
            throw new Error("Failed pattern match at Aeria.Semantic.Monad (line 397, column 55 - line 399, column 78): " + [ v2.constructor.name ]);
        };
        return traverse_1(check)(v.value0.propertyAttributes);
    };
};
var checkNumberProperty = function (property) {
    var validations = fromFoldable1([ new Data_Tuple.Tuple("minimum", checkNumber), new Data_Tuple.Tuple("maximum", checkNumber), new Data_Tuple.Tuple("exclusiveMinimum", checkNumber), new Data_Tuple.Tuple("exclusiveMaximum", checkNumber) ]);
    return checkAttributes(property)(validations);
};
var arrayType = function (v) {
    if (v instanceof Data_List_Types.Nil) {
        return Data_Maybe.Nothing.value;
    };
    if (v instanceof Data_List_Types.Cons) {
        var go = function ($copy_v1) {
            return function ($copy_v2) {
                var $tco_var_v1 = $copy_v1;
                var $tco_done = false;
                var $tco_result;
                function $tco_loop(v1, v2) {
                    if (v1 instanceof Data_List_Types.Nil) {
                        $tco_done = true;
                        return new Data_Maybe.Just(v2);
                    };
                    if (v1 instanceof Data_List_Types.Cons) {
                        if (notEq(valueType(v1.value0))(v2)) {
                            $tco_done = true;
                            return Data_Maybe.Nothing.value;
                        };
                        if (Data_Boolean.otherwise) {
                            $tco_var_v1 = v1.value1;
                            $copy_v2 = v2;
                            return;
                        };
                    };
                    throw new Error("Failed pattern match at Aeria.Semantic.Monad (line 114, column 3 - line 114, column 22): " + [ v1.constructor.name, v2.constructor.name ]);
                };
                while (!$tco_done) {
                    $tco_result = $tco_loop($tco_var_v1, $copy_v2);
                };
                return $tco_result;
            };
        };
        return go(v.value1)(valueType(v.value0));
    };
    throw new Error("Failed pattern match at Aeria.Semantic.Monad (line 110, column 1 - line 110, column 39): " + [ v.constructor.name ]);
};
var checkArrayType = function (v) {
    return function (v1) {
        return function (v2) {
            if (v2 instanceof Aeria_Syntax_Tree.VArray && v2.value0 instanceof Data_List_Types.Cons) {
                var v4 = arrayType(new Data_List_Types.Cons(v2.value0.value0, v2.value0.value1));
                if (v4 instanceof Data_Maybe.Just) {
                    return when1(notEq(v4.value0)(v))(new Data_Either.Left(new PropertyError(v1, new ArrayTypeMismatch(v, v4.value0))));
                };
                if (v4 instanceof Data_Maybe.Nothing) {
                    var received = valueType(v2.value0.value0);
                    return new Data_Either.Left(new PropertyError(v1, new ArrayTypeMismatch(v, received)));
                };
                throw new Error("Failed pattern match at Aeria.Semantic.Monad (line 128, column 54 - line 134, column 74): " + [ v4.constructor.name ]);
            };
            var received = valueType(v2);
            return new Data_Either.Left(new PropertyError(v1, new ArrayTypeMismatch(v, received)));
        };
    };
};
var checkCollectionProperty = function (property) {
    var validations = fromFoldable1([ new Data_Tuple.Tuple("indexes", checkArrayType(Aeria_Syntax_Tree.TProperty.value)), new Data_Tuple.Tuple("populate", checkArrayType(Aeria_Syntax_Tree.TProperty.value)), new Data_Tuple.Tuple("inline", checkBoolean) ]);
    return checkAttributes(property)(validations);
};
var checkEnumProperty = function (property) {
    var validations = fromFoldable1([ new Data_Tuple.Tuple("options", checkArrayType(Aeria_Syntax_Tree.TString.value)) ]);
    return checkAttributes(property)(validations);
};
var checkFileProperty = function (property) {
    var validations = fromFoldable1([ new Data_Tuple.Tuple("accept", checkArrayType(Aeria_Syntax_Tree.TString.value)) ]);
    return checkAttributes(property)(validations);
};
var checkStringProperty = function (property) {
    var typeOptions = [ "text", "email", "password", "search", "time", "month" ];
    var formatOptions = [ "date", "date-time" ];
    var checkType = function (v) {
        return function (v1) {
            if (v1 instanceof Aeria_Syntax_Tree.VString) {
                if (elem(v1.value0)(typeOptions)) {
                    return new Data_Either.Right(Data_Unit.unit);
                };
                if (Data_Boolean.otherwise) {
                    var expected = fromFoldable(typeOptions);
                    return new Data_Either.Left(new PropertyError(v, new AttributeValueMustBe(expected)));
                };
            };
            var received = valueType(v1);
            return new Data_Either.Left(new PropertyError(v, new TypeMismatch(Aeria_Syntax_Tree.TString.value, received)));
        };
    };
    var checkMask = function (v) {
        return function (v1) {
            if (v1 instanceof Aeria_Syntax_Tree.VString) {
                return new Data_Either.Right(Data_Unit.unit);
            };
            if (v1 instanceof Aeria_Syntax_Tree.VArray) {
                return checkArrayType(Aeria_Syntax_Tree.TString.value)(v)(v1);
            };
            var received = valueType(v1);
            var expected = fromFoldable([ Aeria_Syntax_Tree.TString.value, Aeria_Syntax_Tree.TArray.value ]);
            return new Data_Either.Left(new PropertyError(v, new TypesMismatch(expected, received)));
        };
    };
    var checkFormat = function (v) {
        return function (v1) {
            if (v1 instanceof Aeria_Syntax_Tree.VString) {
                if (elem(v1.value0)(formatOptions)) {
                    return new Data_Either.Right(Data_Unit.unit);
                };
                if (Data_Boolean.otherwise) {
                    var expected = fromFoldable(formatOptions);
                    return new Data_Either.Left(new PropertyError(v, new AttributeValueMustBe(expected)));
                };
            };
            var received = valueType(v1);
            return new Data_Either.Left(new PropertyError(v, new TypeMismatch(Aeria_Syntax_Tree.TString.value, received)));
        };
    };
    var validations = fromFoldable1([ new Data_Tuple.Tuple("minLength", checkInteger), new Data_Tuple.Tuple("maxLength", checkInteger), new Data_Tuple.Tuple("format", checkFormat), new Data_Tuple.Tuple("type", checkType), new Data_Tuple.Tuple("mask", checkMask) ]);
    return checkAttributes(property)(validations);
};
var mkPropertyValidate = function (v) {
    if (v instanceof Aeria_Syntax_Tree.PEnum) {
        return checkEnumProperty;
    };
    if (v instanceof Aeria_Syntax_Tree.PString) {
        return checkStringProperty;
    };
    if (v instanceof Aeria_Syntax_Tree.PFloat) {
        return checkNumberProperty;
    };
    if (v instanceof Aeria_Syntax_Tree.PInteger) {
        return checkNumberProperty;
    };
    if (v instanceof Aeria_Syntax_Tree.PFile) {
        return checkFileProperty;
    };
    if (v instanceof Aeria_Syntax_Tree.PBoolean) {
        return checkBooleanProperty;
    };
    if (v instanceof Aeria_Syntax_Tree.PCollection) {
        return checkCollectionProperty;
    };
    if (v instanceof Aeria_Syntax_Tree.PObject) {
        return checkObjectProperty;
    };
    if (v instanceof Aeria_Syntax_Tree.PArray) {
        return checkArrayProperty;
    };
    throw new Error("Failed pattern match at Aeria.Semantic.Monad (line 257, column 22 - line 266, column 33): " + [ v.constructor.name ]);
};
var checkProperty = function (v) {
    var validate = mkPropertyValidate(v.value0.propertyType);
    return validate(v);
};
var checkObjectProperty = function (v) {
    if (Data_List.length(v.value0.propertyAttributes) > 0) {
        return new Data_Either.Left(new PropertyError(v, UnexpectedAttributes.value));
    };
    if (Data_Boolean.otherwise) {
        var validate = function ($copy_v1) {
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(v1) {
                if (v1 instanceof Data_List_Types.Nil) {
                    $tco_done = true;
                    return pure1(Data_Unit.unit);
                };
                if (v1 instanceof Data_List_Types.Cons) {
                    var v2 = checkProperty(v1.value0);
                    if (v2 instanceof Data_Either.Right) {
                        $copy_v1 = v1.value1;
                        return;
                    };
                    if (v2 instanceof Data_Either.Left) {
                        $tco_done = true;
                        return new Data_Either.Left(v2.value0);
                    };
                    throw new Error("Failed pattern match at Aeria.Semantic.Monad (line 293, column 25 - line 295, column 27): " + [ v2.constructor.name ]);
                };
                throw new Error("Failed pattern match at Aeria.Semantic.Monad (line 292, column 5 - line 292, column 31): " + [ v1.constructor.name ]);
            };
            while (!$tco_done) {
                $tco_result = $tco_loop($copy_v1);
            };
            return $tco_result;
        };
        if (v.value0.propertyType instanceof Aeria_Syntax_Tree.PObject) {
            return validate(v.value0.propertyType.value0);
        };
        return new Data_Either.Left(Unknown.value);
    };
    throw new Error("Failed pattern match at Aeria.Semantic.Monad (line 285, column 1 - line 285, column 61): " + [ v.constructor.name ]);
};
var checkArrayProperty = function (v) {
    var validate = function ($copy_v1) {
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v1) {
            if (v1 instanceof Data_List_Types.Nil) {
                $tco_done = true;
                return pure1(Data_Unit.unit);
            };
            if (v1 instanceof Data_List_Types.Cons) {
                var v2 = checkProperty(v1.value0);
                if (v2 instanceof Data_Either.Right) {
                    $copy_v1 = v1.value1;
                    return;
                };
                if (v2 instanceof Data_Either.Left) {
                    $tco_done = true;
                    return new Data_Either.Left(v2.value0);
                };
                throw new Error("Failed pattern match at Aeria.Semantic.Monad (line 281, column 23 - line 283, column 25): " + [ v2.constructor.name ]);
            };
            throw new Error("Failed pattern match at Aeria.Semantic.Monad (line 280, column 3 - line 280, column 29): " + [ v1.constructor.name ]);
        };
        while (!$tco_done) {
            $tco_result = $tco_loop($copy_v1);
        };
        return $tco_result;
    };
    if (v.value0.propertyType instanceof Aeria_Syntax_Tree.PArray) {
        if (v.value0.propertyType.value0 instanceof Aeria_Syntax_Tree.PObject) {
            return validate(v.value0.propertyType.value0.value0);
        };
        return checkProperty(new Aeria_Syntax_Tree.Property({
            propertyType: v.value0.propertyType.value0,
            propertyAttributes: v.value0.propertyAttributes,
            propertyName: v.value0.propertyName
        }));
    };
    return new Data_Either.Left(Unknown.value);
};
var checkProperties = /* #__PURE__ */ traverse_(function (property) {
    var v = checkProperty(property);
    if (v instanceof Data_Either.Right) {
        return pure(Data_Unit.unit);
    };
    if (v instanceof Data_Either.Left) {
        return throwError(v.value0);
    };
    throw new Error("Failed pattern match at Aeria.Semantic.Monad (line 245, column 5 - line 247, column 33): " + [ v.constructor.name ]);
});
var checkCollection = /* #__PURE__ */ (function () {
    var extendProperties = foldl(function (v) {
        return function (v1) {
            var properties$prime = Aeria_Environment.extend(v1.value0.propertyName.value0)(v1)(v.value0.properties);
            return new Context({
                properties: properties$prime,
                getters: v.value0.getters
            });
        };
    });
    var extendGetters = foldl(function (v) {
        return function (v1) {
            var getters$prime = Aeria_Environment.extend(v1.value0.getterName.value0)(v1)(v.value0.getters);
            return new Context({
                getters: getters$prime,
                properties: v.value0.properties
            });
        };
    });
    var extendContext = function (properties) {
        return function (getters) {
            return function (ctx) {
                var ctx$prime = extendProperties(ctx)(properties);
                return extendGetters(ctx$prime)(getters);
            };
        };
    };
    var go = function (v) {
        var table = Data_Maybe.fromMaybe(Data_List_Types.Nil.value)(v.value0.collectionTable);
        var getters = Data_Maybe.fromMaybe(Data_List_Types.Nil.value)(v.value0.collectionGetters);
        var required = Data_Maybe.fromMaybe(Data_List_Types.Nil.value)(v.value0.collectionRequired);
        return discard(checkProperties(v.value0.collectionProperties))(function () {
            return discard(checkGetters(getters))(function () {
                return local(extendContext(v.value0.collectionProperties)(getters))(discard(checkTable(table))(function () {
                    return checkRequired(required);
                }));
            });
        });
    };
    return go;
})();
var checkProgram = function (v) {
    return checkCollection(v.value0.collection);
};
var runSemantic = function (program) {
    var semantic = Control_Monad_Reader_Trans.runReaderT(checkProgram(program))(emptyContext);
    return Control_Monad_Except.runExcept(semantic);
};
export {
    InvalidAttribute,
    AttributeValueMustBe,
    UnexpectedAttributes,
    TypeMismatch,
    TypesMismatch,
    ArrayTypeMismatch,
    PropertyError,
    UndefinedProperty,
    InvalidMacroGetter,
    UndefinedGetter,
    ExpectedPropertyExpr,
    Unknown,
    runSemantic,
    genericPropertyError,
    showPropertyError,
    genericSemanticError,
    showSemanticError
};
