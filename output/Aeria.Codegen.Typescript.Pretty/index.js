// Generated by purs version 0.15.15
import * as Aeria_Codegen_Typescript_Tree from "../Aeria.Codegen.Typescript.Tree/index.js";
import * as Data_Array from "../Data.Array/index.js";
import * as Data_Boolean from "../Data.Boolean/index.js";
import * as Data_Foldable from "../Data.Foldable/index.js";
import * as Data_Show from "../Data.Show/index.js";
import * as Data_String_Utils from "../Data.String.Utils/index.js";
var show = /* #__PURE__ */ Data_Show.show(Data_Show.showBoolean);
var show1 = /* #__PURE__ */ Data_Show.show(Data_Show.showNumber);
var foldr = /* #__PURE__ */ Data_Foldable.foldr(Data_Foldable.foldableArray);
var ppStatementSyntax = function (v) {
    if (v instanceof Aeria_Codegen_Typescript_Tree.TsDeclareKeyword) {
        return "declare";
    };
    if (v instanceof Aeria_Codegen_Typescript_Tree.TsConstKeyword) {
        return "const";
    };
    throw new Error("Failed pattern match at Aeria.Codegen.Typescript.Pretty (line 26, column 3 - line 28, column 30): " + [ v.constructor.name ]);
};
var ppIdentifier = function (v) {
    return v.value0;
};
var ppImportSpecifier = function (v) {
    return ppIdentifier(v.value0);
};
var ppSpecifiers = function (v) {
    return Data_String_Utils.concatWith(v.value0)(ppImportSpecifier);
};
var ppTypeParameters = function (list) {
    if (Data_Array.length(list) === 0) {
        return "";
    };
    if (Data_Boolean.otherwise) {
        return "<" + (Data_String_Utils.concatWith(list)(ppTypeParameter) + ">");
    };
    throw new Error("Failed pattern match at Aeria.Codegen.Typescript.Pretty (line 47, column 1 - line 47, column 52): " + [ list.constructor.name ]);
};
var ppTypeParameter = function (v) {
    return ppType(v.value0);
};
var ppType = function (v) {
    if (v instanceof Aeria_Codegen_Typescript_Tree.TSTypeAny) {
        return "any";
    };
    if (v instanceof Aeria_Codegen_Typescript_Tree.TSTypeString) {
        return "string";
    };
    if (v instanceof Aeria_Codegen_Typescript_Tree.TSTypeLiteral) {
        return ppLiteral(v.value0);
    };
    if (v instanceof Aeria_Codegen_Typescript_Tree.TSTypeQuery) {
        return "typeof " + ppIdentifier(v.value0);
    };
    if (v instanceof Aeria_Codegen_Typescript_Tree.TSIntersectionType) {
        return ppType(v.value0) + (" & " + ppType(v.value1));
    };
    if (v instanceof Aeria_Codegen_Typescript_Tree.TSCallExpression) {
        return ppIdentifier(v.value0) + ("(" + (Data_String_Utils.concatWith(v.value1)(ppType) + ")"));
    };
    if (v instanceof Aeria_Codegen_Typescript_Tree.TSTypeReference) {
        return ppIdentifier(v.value1) + ppTypeParameters(v.value0);
    };
    if (v instanceof Aeria_Codegen_Typescript_Tree.TSFunctionType) {
        return ppTypeParameters(v.value0) + ("(" + (Data_String_Utils.concatWith(v.value1)(function (v1) {
            return ppIdentifier(v1.value0) + (": " + ppType(v1.value1));
        }) + (") => " + ppType(v.value2))));
    };
    if (v instanceof Aeria_Codegen_Typescript_Tree.TSTypeExtends) {
        return ppType(v.value0) + (" extends " + ppType(v.value1));
    };
    throw new Error("Failed pattern match at Aeria.Codegen.Typescript.Pretty (line 32, column 3 - line 45, column 77): " + [ v.constructor.name ]);
};
var ppLiteral = function (v) {
    if (v instanceof Aeria_Codegen_Typescript_Tree.TSTypeLitString) {
        return "\"" + (v.value0 + "\"");
    };
    if (v instanceof Aeria_Codegen_Typescript_Tree.TSTypeLitBoolean) {
        return show(v.value0);
    };
    if (v instanceof Aeria_Codegen_Typescript_Tree.TSTypeLitNumber) {
        return show1(v.value0);
    };
    if (v instanceof Aeria_Codegen_Typescript_Tree.TSTypeLitArray) {
        return "[" + (Data_String_Utils.concatWith(v.value0)(ppType) + "]");
    };
    if (v instanceof Aeria_Codegen_Typescript_Tree.TSTypeLitObject) {
        return "{" + (Data_String_Utils.concatWith(v.value0)(function (v1) {
            return ppIdentifier(v1.value0) + (": " + ppType(v1.value1));
        }) + "}");
    };
    throw new Error("Failed pattern match at Aeria.Codegen.Typescript.Pretty (line 57, column 3 - line 64, column 85): " + [ v.constructor.name ]);
};
var ppStatement = function (v) {
    if (v instanceof Aeria_Codegen_Typescript_Tree.TSImportDeclaration) {
        return "import { " + (ppSpecifiers(v.value0) + (" } from \"" + (ppIdentifier(v.value1) + "\"")));
    };
    if (v instanceof Aeria_Codegen_Typescript_Tree.TSVariableDeclaration) {
        return foldr(function (s) {
            return function (r) {
                return ppStatementSyntax(s) + (" " + r);
            };
        })("")(v.value0) + (ppIdentifier(v.value1) + (": " + ppType(v.value2)));
    };
    if (v instanceof Aeria_Codegen_Typescript_Tree.TSTypeAliasDeclaration) {
        return "type " + (ppIdentifier(v.value0) + (" = " + ppType(v.value1)));
    };
    if (v instanceof Aeria_Codegen_Typescript_Tree.TSExportNamedDeclaration) {
        return "export " + ppStatement(v.value0);
    };
    throw new Error("Failed pattern match at Aeria.Codegen.Typescript.Pretty (line 16, column 3 - line 22, column 77): " + [ v.constructor.name ]);
};
var ppTypescript = function (v) {
    return foldr(function (s) {
        return function (r) {
            return ppStatement(s) + ("\x0a" + r);
        };
    })("")(v.value0);
};
export {
    ppTypescript,
    ppStatement,
    ppStatementSyntax,
    ppType,
    ppTypeParameters,
    ppTypeParameter,
    ppLiteral,
    ppSpecifiers,
    ppImportSpecifier,
    ppIdentifier
};
