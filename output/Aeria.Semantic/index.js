// Generated by purs version 0.15.15
import * as Aeria_Diagnostic_Message from "../Aeria.Diagnostic.Message/index.js";
import * as Aeria_Semantic_Error from "../Aeria.Semantic.Error/index.js";
import * as Aeria_Syntax_Tree from "../Aeria.Syntax.Tree/index.js";
import * as Control_Applicative from "../Control.Applicative/index.js";
import * as Control_Bind from "../Control.Bind/index.js";
import * as Control_Monad_Error_Class from "../Control.Monad.Error.Class/index.js";
import * as Control_Monad_Except from "../Control.Monad.Except/index.js";
import * as Control_Monad_Except_Trans from "../Control.Monad.Except.Trans/index.js";
import * as Control_Monad_Reader_Class from "../Control.Monad.Reader.Class/index.js";
import * as Control_Monad_Reader_Trans from "../Control.Monad.Reader.Trans/index.js";
import * as Data_Array from "../Data.Array/index.js";
import * as Data_Boolean from "../Data.Boolean/index.js";
import * as Data_Either from "../Data.Either/index.js";
import * as Data_Eq from "../Data.Eq/index.js";
import * as Data_Foldable from "../Data.Foldable/index.js";
import * as Data_Function from "../Data.Function/index.js";
import * as Data_Functor from "../Data.Functor/index.js";
import * as Data_Identity from "../Data.Identity/index.js";
import * as Data_List from "../Data.List/index.js";
import * as Data_List_Types from "../Data.List.Types/index.js";
import * as Data_Map_Internal from "../Data.Map.Internal/index.js";
import * as Data_Maybe from "../Data.Maybe/index.js";
import * as Data_Ord from "../Data.Ord/index.js";
import * as Data_Show from "../Data.Show/index.js";
import * as Data_Tuple from "../Data.Tuple/index.js";
import * as Data_Unit from "../Data.Unit/index.js";
var notEq = /* #__PURE__ */ Data_Eq.notEq(Aeria_Syntax_Tree.eqTyp);
var bindReaderT = /* #__PURE__ */ Control_Monad_Reader_Trans.bindReaderT(/* #__PURE__ */ Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity));
var bind = /* #__PURE__ */ Control_Bind.bind(bindReaderT);
var monadExceptT = /* #__PURE__ */ Control_Monad_Except_Trans.monadExceptT(Data_Identity.monadIdentity);
var ask = /* #__PURE__ */ Control_Monad_Reader_Class.ask(/* #__PURE__ */ Control_Monad_Reader_Trans.monadAskReaderT(monadExceptT));
var throwError = /* #__PURE__ */ Control_Monad_Error_Class.throwError(/* #__PURE__ */ Control_Monad_Reader_Trans.monadThrowReaderT(/* #__PURE__ */ Control_Monad_Except_Trans.monadThrowExceptT(Data_Identity.monadIdentity)));
var lookup = /* #__PURE__ */ Data_Map_Internal.lookup(Data_Ord.ordString);
var applicativeReaderT = /* #__PURE__ */ Control_Monad_Reader_Trans.applicativeReaderT(/* #__PURE__ */ Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity));
var traverse_ = /* #__PURE__ */ Data_Foldable.traverse_(applicativeReaderT)(Data_List_Types.foldableList);
var pure = /* #__PURE__ */ Control_Applicative.pure(applicativeReaderT);
var when = /* #__PURE__ */ Control_Applicative.when(applicativeReaderT);
var elem = /* #__PURE__ */ Data_Array.elem(Data_Eq.eqString);
var find = /* #__PURE__ */ Data_Foldable.find(Data_List_Types.foldableList);
var discard = /* #__PURE__ */ Control_Bind.discard(Control_Bind.discardUnit);
var discard1 = /* #__PURE__ */ discard(bindReaderT);
var when1 = /* #__PURE__ */ Control_Applicative.when(Data_Either.applicativeEither);
var discard2 = /* #__PURE__ */ discard(Data_Either.bindEither);
var pure1 = /* #__PURE__ */ Control_Applicative.pure(Data_Either.applicativeEither);
var fromFoldable = /* #__PURE__ */ Data_Map_Internal.fromFoldable(Data_Ord.ordString)(Data_Foldable.foldableArray);
var elem1 = /* #__PURE__ */ Data_Array.elem(Aeria_Syntax_Tree.eqTyp);
var fromFoldable1 = /* #__PURE__ */ Data_List.fromFoldable(Data_Foldable.foldableArray);
var insert = /* #__PURE__ */ Data_Map_Internal.insert(Data_Ord.ordString);
var foldM = /* #__PURE__ */ Data_List.foldM(/* #__PURE__ */ Control_Monad_Reader_Trans.monadReaderT(monadExceptT));
var map = /* #__PURE__ */ Data_Functor.map(Data_List_Types.functorList);
var show = /* #__PURE__ */ Data_Show.show(Data_Show.showInt);
var local = /* #__PURE__ */ Control_Monad_Reader_Class.local(/* #__PURE__ */ Control_Monad_Reader_Trans.monadReaderReaderT(monadExceptT));
var CollectionContext = /* #__PURE__ */ (function () {
    function CollectionContext(value0) {
        this.value0 = value0;
    };
    CollectionContext.create = function (value0) {
        return new CollectionContext(value0);
    };
    return CollectionContext;
})();
var Context = /* #__PURE__ */ (function () {
    function Context(value0) {
        this.value0 = value0;
    };
    Context.create = function (value0) {
        return new Context(value0);
    };
    return Context;
})();
var typeOf = function (v) {
    if (v instanceof Aeria_Syntax_Tree.LInteger) {
        return Aeria_Syntax_Tree.TInteger.value;
    };
    if (v instanceof Aeria_Syntax_Tree.LFloat) {
        return Aeria_Syntax_Tree.TFloat.value;
    };
    if (v instanceof Aeria_Syntax_Tree.LString) {
        return Aeria_Syntax_Tree.TString.value;
    };
    if (v instanceof Aeria_Syntax_Tree.LBoolean) {
        return Aeria_Syntax_Tree.TBoolean.value;
    };
    if (v instanceof Aeria_Syntax_Tree.LArray) {
        return Aeria_Syntax_Tree.TArray.value;
    };
    if (v instanceof Aeria_Syntax_Tree.LProperty) {
        return Aeria_Syntax_Tree.TProperty.value;
    };
    throw new Error("Failed pattern match at Aeria.Semantic (line 452, column 1 - line 452, column 25): " + [ v.constructor.name ]);
};
var typeOfArray = function (v) {
    if (v instanceof Data_List_Types.Nil) {
        return Data_Maybe.Nothing.value;
    };
    if (v instanceof Data_List_Types.Cons) {
        var go = function ($copy_v1) {
            return function ($copy_v2) {
                var $tco_var_v1 = $copy_v1;
                var $tco_done = false;
                var $tco_result;
                function $tco_loop(v1, v2) {
                    if (v1 instanceof Data_List_Types.Nil) {
                        $tco_done = true;
                        return new Data_Maybe.Just(v2);
                    };
                    if (v1 instanceof Data_List_Types.Cons) {
                        if (notEq(typeOf(v1.value0))(v2)) {
                            $tco_done = true;
                            return Data_Maybe.Nothing.value;
                        };
                        if (Data_Boolean.otherwise) {
                            $tco_var_v1 = v1.value1;
                            $copy_v2 = v2;
                            return;
                        };
                    };
                    throw new Error("Failed pattern match at Aeria.Semantic (line 447, column 3 - line 447, column 22): " + [ v1.constructor.name, v2.constructor.name ]);
                };
                while (!$tco_done) {
                    $tco_result = $tco_loop($tco_var_v1, $copy_v2);
                };
                return $tco_result;
            };
        };
        return go(v.value1)(typeOf(v.value0));
    };
    throw new Error("Failed pattern match at Aeria.Semantic (line 443, column 1 - line 443, column 43): " + [ v.constructor.name ]);
};
var makeDiagnostic = function (v) {
    return function (span) {
        return function (semanticError) {
            return new Aeria_Diagnostic_Message.Diagnostic({
                filepath: v.value0.filepath,
                span: span,
                source: v.value0.source,
                info: new Aeria_Diagnostic_Message.DiagnosticSemanticError(semanticError)
            });
        };
    };
};
var throwDiagnostic = function (span) {
    return function (semanticError) {
        return bind(ask)(function (context) {
            var diagnostic = makeDiagnostic(context)(span)(semanticError);
            return throwError(diagnostic);
        });
    };
};
var sAttributes = function (v) {
    return function (fl) {
        return function (fe) {
            var go = function (v1) {
                if (v1.value2 instanceof Aeria_Syntax_Tree.ALiteral) {
                    var v2 = lookup(v1.value1.value1)(fl);
                    if (v2 instanceof Data_Maybe.Just) {
                        return v2.value0(v)(v1.value2.value1);
                    };
                    if (v2 instanceof Data_Maybe.Nothing) {
                        return throwDiagnostic(v1.value1.value0)(new Aeria_Semantic_Error.PropertyError(v, new Aeria_Semantic_Error.UndefinedAttribute(v1.value1)));
                    };
                    throw new Error("Failed pattern match at Aeria.Semantic (line 519, column 5 - line 521, column 94): " + [ v2.constructor.name ]);
                };
                if (v1.value2 instanceof Aeria_Syntax_Tree.AExpr) {
                    var v2 = lookup(v1.value1.value1)(fe);
                    if (v2 instanceof Data_Maybe.Just) {
                        return v2.value0(v)(v1.value2.value1);
                    };
                    if (v2 instanceof Data_Maybe.Nothing) {
                        return throwDiagnostic(v1.value1.value0)(new Aeria_Semantic_Error.PropertyError(v, new Aeria_Semantic_Error.UndefinedAttribute(v1.value1)));
                    };
                    throw new Error("Failed pattern match at Aeria.Semantic (line 523, column 5 - line 525, column 94): " + [ v2.constructor.name ]);
                };
                throw new Error("Failed pattern match at Aeria.Semantic (line 518, column 3 - line 521, column 94): " + [ v1.constructor.name ]);
            };
            return traverse_(go)(v.value0.attributes);
        };
    };
};
var sBooleanProperty = /* #__PURE__ */ (function () {
    var sAttributes$prime = function (v) {
        if (Data_List.length(v.value0.attributes) > 0) {
            return throwDiagnostic(v.value0.span)(new Aeria_Semantic_Error.PropertyError(v, Aeria_Semantic_Error.PropertyTypeDoesNotExpectAttributes.value));
        };
        if (Data_Boolean.otherwise) {
            return pure(Data_Unit.unit);
        };
        throw new Error("Failed pattern match at Aeria.Semantic (line 327, column 5 - line 330, column 30): " + [ v.constructor.name ]);
    };
    return sAttributes$prime;
})();
var sFiltersPresets = function (v) {
    var go = function (v1) {
        return when(Data_Maybe.isNothing(v1.value0.filters))(throwDiagnostic(v1.value0.span)(new Aeria_Semantic_Error.FiltersPresetsError(v1)));
    };
    return traverse_(go);
};
var sLayout = function (v) {
    var go = function (v1) {
        if (v1.value0.component instanceof Data_Maybe.Nothing) {
            return pure(Data_Unit.unit);
        };
        if (v1.value0.component instanceof Data_Maybe.Just) {
            return when(Data_Maybe.isNothing(v1.value0.component.value0.value0.name))(throwDiagnostic(v1.value0.component.value0.value0.span)(new Aeria_Semantic_Error.LayoutComponentError(v1)));
        };
        throw new Error("Failed pattern match at Aeria.Semantic (line 203, column 5 - line 203, column 55): " + [ v1.constructor.name ]);
    };
    return traverse_(go);
};
var sSecurity = function (functions) {
    var sRateLimiting = function (v) {
        if (v instanceof Data_Maybe.Just) {
            if (v.value0.value0.strategy instanceof Data_Maybe.Just) {
                var $191 = elem(v.value0.value0.strategy.value0)([ "tenant", "ip" ]);
                if ($191) {
                    return pure(Data_Unit.unit);
                };
                return throwDiagnostic(v.value0.value0.span)(new Aeria_Semantic_Error.UndefinedStrategy(v.value0.value0.strategy.value0));
            };
            if (v.value0.value0.strategy instanceof Data_Maybe.Nothing) {
                return pure(Data_Unit.unit);
            };
            throw new Error("Failed pattern match at Aeria.Semantic (line 226, column 5 - line 231, column 27): " + [ v.value0.value0.strategy.constructor.name ]);
        };
        return pure(Data_Unit.unit);
    };
    var sLogging = function (v) {
        if (v instanceof Data_Maybe.Just && v.value0.value0.strategy instanceof Data_Maybe.Just) {
            var $198 = elem(v.value0.value0.strategy.value0)([ "tenant", "ip" ]);
            if ($198) {
                return pure(Data_Unit.unit);
            };
            return throwDiagnostic(v.value0.value0.span)(new Aeria_Semantic_Error.UndefinedStrategy(v.value0.value0.strategy.value0));
        };
        return pure(Data_Unit.unit);
    };
    var sFunctionName = function (span) {
        return function (v) {
            var v1 = find(function (v2) {
                return v2.value1.value1 === v.value1;
            })(functions);
            if (v1 instanceof Data_Maybe.Just) {
                return pure(Data_Unit.unit);
            };
            if (v1 instanceof Data_Maybe.Nothing) {
                return throwDiagnostic(span)(new Aeria_Semantic_Error.UndefinedFunction(v));
            };
            throw new Error("Failed pattern match at Aeria.Semantic (line 221, column 5 - line 223, column 71): " + [ v1.constructor.name ]);
        };
    };
    var go = function (v) {
        return discard1(sFunctionName(v.value0.span)(v.value0.functionName))(function () {
            return discard1(sRateLimiting(v.value0.rateLimiting))(function () {
                return discard1(sLogging(v.value0.logging))(function () {
                    return pure(Data_Unit.unit);
                });
            });
        });
    };
    return traverse_(go);
};
var lookupProperty = function (v) {
    return function (v1) {
        return function (v2) {
            var v3 = lookup(v1.value1)(v.value0.collections);
            if (v3 instanceof Data_Maybe.Just) {
                return lookup(v2.value1)(v3.value0.value0.properties);
            };
            if (v3 instanceof Data_Maybe.Nothing) {
                return Data_Maybe.Nothing.value;
            };
            throw new Error("Failed pattern match at Aeria.Semantic (line 81, column 3 - line 84, column 23): " + [ v3.constructor.name ]);
        };
    };
};
var sExpr = function (context) {
    return function (collectionName) {
        return function (expr) {
            var isStrictProperty = function (propertyName) {
                return when1(Data_Maybe.isNothing(lookupProperty(context)(collectionName)(propertyName)))(new Data_Either.Left(new Aeria_Semantic_Error.NotProperty(propertyName)));
            };
            var sBinaryExpr = function (lft) {
                return function (rgt) {
                    var v = new Data_Tuple.Tuple(lft, rgt);
                    if (v.value0 instanceof Aeria_Syntax_Tree.ELiteral && v.value0.value0 instanceof Aeria_Syntax_Tree.LProperty) {
                        return discard2(isStrictProperty(v.value0.value0.value1))(function () {
                            return sExpr(context)(collectionName)(rgt);
                        });
                    };
                    if (v.value1 instanceof Aeria_Syntax_Tree.ELiteral && v.value1.value0 instanceof Aeria_Syntax_Tree.LProperty) {
                        return discard2(isStrictProperty(v.value1.value0.value1))(function () {
                            return sExpr(context)(collectionName)(lft);
                        });
                    };
                    return new Data_Either.Left(Aeria_Semantic_Error.ExpectedProperty.value);
                };
            };
            var sExists = function (v) {
                if (v instanceof Aeria_Syntax_Tree.ELiteral && v.value0 instanceof Aeria_Syntax_Tree.LProperty) {
                    return isStrictProperty(v.value0.value1);
                };
                return new Data_Either.Left(Aeria_Semantic_Error.ExpectedProperty.value);
            };
            if (expr instanceof Aeria_Syntax_Tree.EIn) {
                return sBinaryExpr(expr.value0)(expr.value1);
            };
            if (expr instanceof Aeria_Syntax_Tree.EEq) {
                return sBinaryExpr(expr.value0)(expr.value1);
            };
            if (expr instanceof Aeria_Syntax_Tree.ELt) {
                return sBinaryExpr(expr.value0)(expr.value1);
            };
            if (expr instanceof Aeria_Syntax_Tree.EGt) {
                return sBinaryExpr(expr.value0)(expr.value1);
            };
            if (expr instanceof Aeria_Syntax_Tree.ELte) {
                return sBinaryExpr(expr.value0)(expr.value1);
            };
            if (expr instanceof Aeria_Syntax_Tree.EGte) {
                return sBinaryExpr(expr.value0)(expr.value1);
            };
            if (expr instanceof Aeria_Syntax_Tree.EOr) {
                return sBinaryExpr(expr.value0)(expr.value1);
            };
            if (expr instanceof Aeria_Syntax_Tree.EAnd) {
                return sBinaryExpr(expr.value0)(expr.value1);
            };
            if (expr instanceof Aeria_Syntax_Tree.EExists) {
                return sExists(expr.value0);
            };
            if (expr instanceof Aeria_Syntax_Tree.ENot) {
                return sExpr(context)(collectionName)(expr.value0);
            };
            if (expr instanceof Aeria_Syntax_Tree.ELiteral) {
                return pure1(Data_Unit.unit);
            };
            throw new Error("Failed pattern match at Aeria.Semantic (line 122, column 3 - line 133, column 31): " + [ expr.constructor.name ]);
        };
    };
};
var sGetters = function (collectionName) {
    return traverse_(function (v) {
        return bind(ask)(function (context) {
            return when(Data_Maybe.isJust(lookupProperty(context)(collectionName)(v.value0.name)))(throwDiagnostic(v.value0.name.value0)(new Aeria_Semantic_Error.PropertyIsAlreadyInUse(v.value0.name)));
        });
    });
};
var sRequired = function (collectionName) {
    var sCond = function (v) {
        return function (v1) {
            if (v1 instanceof Data_Maybe.Just) {
                var v2 = sExpr(v)(collectionName)(v1.value0.value1);
                if (v2 instanceof Data_Either.Right) {
                    return pure(v2.value0);
                };
                if (v2 instanceof Data_Either.Left) {
                    return throwDiagnostic(v1.value0.value0)(new Aeria_Semantic_Error.ExprError(v1.value0.value1, v2.value0));
                };
                throw new Error("Failed pattern match at Aeria.Semantic (line 249, column 7 - line 251, column 74): " + [ v2.constructor.name ]);
            };
            if (v1 instanceof Data_Maybe.Nothing) {
                return pure(Data_Unit.unit);
            };
            throw new Error("Failed pattern match at Aeria.Semantic (line 248, column 5 - line 251, column 74): " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
    var go = function (v) {
        return bind(ask)(function (context) {
            return discard1(when(Data_Maybe.isNothing(lookupProperty(context)(collectionName)(v.value1)))(throwDiagnostic(v.value1.value0)(new Aeria_Semantic_Error.UndefinedProperty(v.value1))))(function () {
                return sCond(context)(v.value2);
            });
        });
    };
    return traverse_(go);
};
var lookupGetter = function (v) {
    return function (v1) {
        return function (v2) {
            var v3 = lookup(v1.value1)(v.value0.collections);
            if (v3 instanceof Data_Maybe.Just) {
                return lookup(v2.value1)(v3.value0.value0.getters);
            };
            if (v3 instanceof Data_Maybe.Nothing) {
                return Data_Maybe.Nothing.value;
            };
            throw new Error("Failed pattern match at Aeria.Semantic (line 88, column 3 - line 91, column 23): " + [ v3.constructor.name ]);
        };
    };
};
var lookupCollection = function (v) {
    return function (v1) {
        return lookup(v1.value1)(v.value0.collections);
    };
};
var literalPos = function (v) {
    if (v instanceof Aeria_Syntax_Tree.LInteger) {
        return v.value0;
    };
    if (v instanceof Aeria_Syntax_Tree.LFloat) {
        return v.value0;
    };
    if (v instanceof Aeria_Syntax_Tree.LString) {
        return v.value0;
    };
    if (v instanceof Aeria_Syntax_Tree.LBoolean) {
        return v.value0;
    };
    if (v instanceof Aeria_Syntax_Tree.LArray) {
        return v.value0;
    };
    if (v instanceof Aeria_Syntax_Tree.LProperty) {
        return v.value0;
    };
    throw new Error("Failed pattern match at Aeria.Semantic (line 460, column 1 - line 460, column 30): " + [ v.constructor.name ]);
};
var sArrayType = function (v) {
    return function (v1) {
        return function (v2) {
            if (v2 instanceof Aeria_Syntax_Tree.LArray && v2.value1 instanceof Data_List_Types.Cons) {
                var v3 = typeOfArray(v2.value1);
                if (v3 instanceof Data_Maybe.Just) {
                    return when(notEq(v3.value0)(v))(throwDiagnostic(literalPos(v2.value1.value0))(new Aeria_Semantic_Error.PropertyError(v1, new Aeria_Semantic_Error.ArrayTypeMismatch(v, v3.value0))));
                };
                if (v3 instanceof Data_Maybe.Nothing) {
                    return throwDiagnostic(literalPos(v2.value1.value0))(new Aeria_Semantic_Error.PropertyError(v1, new Aeria_Semantic_Error.ArrayTypeMismatch(v, typeOf(v2.value1.value0))));
                };
                throw new Error("Failed pattern match at Aeria.Semantic (line 416, column 3 - line 420, column 102): " + [ v3.constructor.name ]);
            };
            return throwDiagnostic(literalPos(v2))(new Aeria_Semantic_Error.PropertyError(v1, new Aeria_Semantic_Error.ArrayTypeMismatch(v, typeOf(v2))));
        };
    };
};
var sEnumProperty = function (property) {
    var literalAttributes = fromFoldable([ new Data_Tuple.Tuple("options", sArrayType(Aeria_Syntax_Tree.TString.value)) ]);
    return sAttributes(property)(literalAttributes)(Data_Map_Internal.empty);
};
var sFileProperty = function (property) {
    var literalAttributes = fromFoldable([ new Data_Tuple.Tuple("accept", sArrayType(Aeria_Syntax_Tree.TString.value)) ]);
    return sAttributes(property)(literalAttributes)(Data_Map_Internal.empty);
};
var sType = function (accepts) {
    return function (property) {
        return function (literal) {
            var type$prime = typeOf(literal);
            var span = literalPos(literal);
            return when(!elem1(type$prime)(accepts))(throwDiagnostic(span)(new Aeria_Semantic_Error.PropertyError(property, new Aeria_Semantic_Error.TypeMismatch(accepts, type$prime))));
        };
    };
};
var sNumberProperty = function (property) {
    var literalAttributes = fromFoldable([ new Data_Tuple.Tuple("minimum", sType([ Aeria_Syntax_Tree.TFloat.value, Aeria_Syntax_Tree.TInteger.value ])), new Data_Tuple.Tuple("maximum", sType([ Aeria_Syntax_Tree.TFloat.value, Aeria_Syntax_Tree.TInteger.value ])), new Data_Tuple.Tuple("exclusiveMinimum", sType([ Aeria_Syntax_Tree.TFloat.value, Aeria_Syntax_Tree.TInteger.value ])), new Data_Tuple.Tuple("exclusiveMaximum", sType([ Aeria_Syntax_Tree.TFloat.value, Aeria_Syntax_Tree.TInteger.value ])) ]);
    return sAttributes(property)(literalAttributes)(Data_Map_Internal.empty);
};
var sStringProperty = function (property) {
    var typeOptions = [ "text", "email", "password", "search", "time", "month" ];
    var formatOptions = [ "date", "date-time" ];
    var checkType = function (v) {
        return function (v1) {
            if (v1 instanceof Aeria_Syntax_Tree.LString) {
                if (elem(v1.value1)(typeOptions)) {
                    return pure(Data_Unit.unit);
                };
                if (Data_Boolean.otherwise) {
                    return throwDiagnostic(v1.value0)(new Aeria_Semantic_Error.PropertyError(v, new Aeria_Semantic_Error.AttributeLiteralMustBe(fromFoldable1(typeOptions))));
                };
            };
            var received = typeOf(v1);
            return throwDiagnostic(literalPos(v1))(new Aeria_Semantic_Error.PropertyError(v, new Aeria_Semantic_Error.TypeMismatch([ Aeria_Syntax_Tree.TString.value ], received)));
        };
    };
    var checkMask = function (v) {
        return function (v1) {
            if (v1 instanceof Aeria_Syntax_Tree.LArray) {
                return sArrayType(Aeria_Syntax_Tree.TString.value)(v)(v1);
            };
            if (v1 instanceof Aeria_Syntax_Tree.LString) {
                return pure(Data_Unit.unit);
            };
            var received = typeOf(v1);
            var expected = [ Aeria_Syntax_Tree.TString.value, Aeria_Syntax_Tree.TArray.value ];
            return throwDiagnostic(literalPos(v1))(new Aeria_Semantic_Error.PropertyError(v, new Aeria_Semantic_Error.TypeMismatch(expected, received)));
        };
    };
    var checkFormat = function (v) {
        return function (v1) {
            if (v1 instanceof Aeria_Syntax_Tree.LString) {
                if (elem(v1.value1)(formatOptions)) {
                    return pure(Data_Unit.unit);
                };
                if (Data_Boolean.otherwise) {
                    return throwDiagnostic(v1.value0)(new Aeria_Semantic_Error.PropertyError(v, new Aeria_Semantic_Error.AttributeLiteralMustBe(fromFoldable1(formatOptions))));
                };
            };
            var received = typeOf(v1);
            return throwDiagnostic(literalPos(v1))(new Aeria_Semantic_Error.PropertyError(v, new Aeria_Semantic_Error.TypeMismatch([ Aeria_Syntax_Tree.TString.value ], received)));
        };
    };
    var literalAttributes = fromFoldable([ new Data_Tuple.Tuple("minLength", sType([ Aeria_Syntax_Tree.TInteger.value ])), new Data_Tuple.Tuple("maxLength", sType([ Aeria_Syntax_Tree.TInteger.value ])), new Data_Tuple.Tuple("format", checkFormat), new Data_Tuple.Tuple("type", checkType), new Data_Tuple.Tuple("mask", checkMask) ]);
    return sAttributes(property)(literalAttributes)(Data_Map_Internal.empty);
};
var extendContext = function (v) {
    return function (properties) {
        return function (getters) {
            return function (v1) {
                var extendProperties = function (v2) {
                    var go = function (pts) {
                        return function (v3) {
                            return bind(ask)(function (context) {
                                var v4 = lookup(v3.value0.name.value1)(pts);
                                if (v4 instanceof Data_Maybe.Nothing) {
                                    return pure(insert(v3.value0.name.value1)(v3)(pts));
                                };
                                if (v4 instanceof Data_Maybe.Just) {
                                    var diagnostic = makeDiagnostic(context)(v3.value0.name.value0)(new Aeria_Semantic_Error.PropertyIsAlreadyInUse(v3.value0.name));
                                    return throwError(diagnostic);
                                };
                                throw new Error("Failed pattern match at Aeria.Semantic (line 58, column 11 - line 62, column 36): " + [ v4.constructor.name ]);
                            });
                        };
                    };
                    return bind(foldM(go)(v2.value0.properties)(properties))(function (propertiesContext$prime) {
                        return pure(new CollectionContext({
                            properties: propertiesContext$prime,
                            getters: v2.value0.getters
                        }));
                    });
                };
                var extendGetters = function (v2) {
                    var go = function (gts) {
                        return function (v3) {
                            return bind(ask)(function (context) {
                                var v4 = lookup(v3.value0.name.value1)(gts);
                                if (v4 instanceof Data_Maybe.Nothing) {
                                    return pure(insert(v3.value0.name.value1)(v3)(gts));
                                };
                                if (v4 instanceof Data_Maybe.Just) {
                                    var diagnostic = makeDiagnostic(context)(v3.value0.name.value0)(new Aeria_Semantic_Error.PropertyIsAlreadyInUse(v3.value0.name));
                                    return throwError(diagnostic);
                                };
                                throw new Error("Failed pattern match at Aeria.Semantic (line 72, column 11 - line 76, column 36): " + [ v4.constructor.name ]);
                            });
                        };
                    };
                    return bind(foldM(go)(v2.value0.getters)(getters))(function (gettersContext$prime) {
                        return pure(new CollectionContext({
                            properties: v2.value0.properties,
                            getters: gettersContext$prime
                        }));
                    });
                };
                var v2 = lookup(v.value1)(v1.value0.collections);
                if (v2 instanceof Data_Maybe.Just) {
                    return bind(extendGetters(v2.value0))(function (collectionContext$prime) {
                        return bind(extendProperties(collectionContext$prime))(function (collectionContext$prime$prime) {
                            return pure(new Context({
                                collections: insert(v.value1)(collectionContext$prime$prime)(v1.value0.collections),
                                filepath: v1.value0.filepath,
                                source: v1.value0.source
                            }));
                        });
                    });
                };
                if (v2 instanceof Data_Maybe.Nothing) {
                    return bind(extendProperties(new CollectionContext({
                        getters: Data_Map_Internal.empty,
                        properties: Data_Map_Internal.empty
                    })))(function (collectionContext$prime) {
                        return bind(extendGetters(collectionContext$prime))(function (collectionContext$prime$prime) {
                            return pure(new Context({
                                collections: insert(v.value1)(collectionContext$prime$prime)(v1.value0.collections),
                                filepath: v1.value0.filepath,
                                source: v1.value0.source
                            }));
                        });
                    });
                };
                throw new Error("Failed pattern match at Aeria.Semantic (line 41, column 3 - line 49, column 112): " + [ v2.constructor.name ]);
            };
        };
    };
};
var emptyContext = function (filepath) {
    return function (source) {
        return new Context({
            collections: Data_Map_Internal.empty,
            filepath: filepath,
            source: source
        });
    };
};
var collectionHasProperty = function (context) {
    return function (collectionName) {
        return function (propertyName) {
            var v = lookupGetter(context)(collectionName)(propertyName);
            if (v instanceof Data_Maybe.Nothing) {
                var v1 = lookupProperty(context)(collectionName)(propertyName);
                if (v1 instanceof Data_Maybe.Nothing) {
                    return Data_Maybe.Nothing.value;
                };
                if (v1 instanceof Data_Maybe.Just) {
                    return new Data_Maybe.Just(Data_Unit.unit);
                };
                throw new Error("Failed pattern match at Aeria.Semantic (line 100, column 7 - line 102, column 28): " + [ v1.constructor.name ]);
            };
            if (v instanceof Data_Maybe.Just) {
                return new Data_Maybe.Just(Data_Unit.unit);
            };
            throw new Error("Failed pattern match at Aeria.Semantic (line 98, column 3 - line 103, column 24): " + [ v.constructor.name ]);
        };
    };
};
var sCheckIfPropertiesIsValid = function (collectionName) {
    return traverse_(function (v) {
        return bind(ask)(function (context) {
            var v1 = collectionHasProperty(context)(collectionName)(v);
            if (v1 instanceof Data_Maybe.Just) {
                return pure(Data_Unit.unit);
            };
            if (v1 instanceof Data_Maybe.Nothing) {
                return throwDiagnostic(v.value0)(new Aeria_Semantic_Error.UndefinedProperty(v));
            };
            throw new Error("Failed pattern match at Aeria.Semantic (line 299, column 3 - line 301, column 69): " + [ v1.constructor.name ]);
        });
    });
};
var sFilters = function (collectionName) {
    return function (collectionFilters) {
        var properties = map(function (v) {
            return v.value1;
        })(collectionFilters);
        return sCheckIfPropertiesIsValid(collectionName)(properties);
    };
};
var sForm = function (collectionName) {
    return function (collectionForm) {
        var properties = map(function (v) {
            return v.value1;
        })(collectionForm);
        return sCheckIfPropertiesIsValid(collectionName)(properties);
    };
};
var sImmutable = function (v) {
    return function (v1) {
        if (v1 instanceof Data_Maybe.Nothing) {
            return pure(Data_Unit.unit);
        };
        if (v1 instanceof Data_Maybe.Just && v1.value0 instanceof Aeria_Syntax_Tree.CollectionImmutableBool) {
            return pure(Data_Unit.unit);
        };
        if (v1 instanceof Data_Maybe.Just && v1.value0 instanceof Aeria_Syntax_Tree.CollectionImmutableList) {
            var properties = map(function (v2) {
                return v2.value1;
            })(v1.value0.value0);
            return sCheckIfPropertiesIsValid(v)(properties);
        };
        throw new Error("Failed pattern match at Aeria.Semantic (line 289, column 1 - line 289, column 76): " + [ v.constructor.name, v1.constructor.name ]);
    };
};
var sIndexes = function (collectionName) {
    return function (collectionIndexes) {
        var properties = map(function (v) {
            return v.value1;
        })(collectionIndexes);
        return sCheckIfPropertiesIsValid(collectionName)(properties);
    };
};
var sSearch = function (collectionName) {
    return function (v) {
        return sCheckIfPropertiesIsValid(collectionName)(v.value0.indexes);
    };
};
var sTable = function (collectionName) {
    return function (collectionTable) {
        var properties = map(function (v) {
            return v.value1;
        })(collectionTable);
        return sCheckIfPropertiesIsValid(collectionName)(properties);
    };
};
var sTableMeta = function (collectionName) {
    return function (collectionTable) {
        var properties = map(function (v) {
            return v.value1;
        })(collectionTable);
        return sCheckIfPropertiesIsValid(collectionName)(properties);
    };
};
var sWritable = function (collectionName) {
    return function (collectionWritable) {
        var properties = map(function (v) {
            return v.value1;
        })(collectionWritable);
        return sCheckIfPropertiesIsValid(collectionName)(properties);
    };
};
var sRefProperty = function (v) {
    return function (property) {
        var sConstraints = function (_property$prime) {
            return function (expr) {
                return bind(ask)(function (context) {
                    var v1 = sExpr(context)(v)(expr);
                    if (v1 instanceof Data_Either.Right) {
                        return pure(v1.value0);
                    };
                    if (v1 instanceof Data_Either.Left) {
                        return throwDiagnostic(v.value0)(new Aeria_Semantic_Error.ExprError(expr, v1.value0));
                    };
                    throw new Error("Failed pattern match at Aeria.Semantic (line 396, column 7 - line 398, column 74): " + [ v1.constructor.name ]);
                });
            };
        };
        var exprAttributes = fromFoldable([ new Data_Tuple.Tuple("constraints", sConstraints) ]);
        var collectionHasProperty$prime = function (v1) {
            if (v1 instanceof Aeria_Syntax_Tree.LProperty) {
                return bind(ask)(function (context) {
                    var v2 = collectionHasProperty(context)(v)(v1.value1);
                    if (v2 instanceof Data_Maybe.Nothing) {
                        return throwDiagnostic(v1.value0)(new Aeria_Semantic_Error.UndefinedProperty(v1.value1));
                    };
                    if (v2 instanceof Data_Maybe.Just) {
                        return pure(Data_Unit.unit);
                    };
                    throw new Error("Failed pattern match at Aeria.Semantic (line 387, column 7 - line 390, column 28): " + [ v2.constructor.name ]);
                });
            };
            return throwDiagnostic(literalPos(v1))(new Aeria_Semantic_Error.PropertyError(property, new Aeria_Semantic_Error.TypeMismatch([ Aeria_Syntax_Tree.TArray.value ], typeOf(v1))));
        };
        var sArrayType$prime = function (v1) {
            return function (v2) {
                if (v2 instanceof Aeria_Syntax_Tree.LArray) {
                    return discard1(sArrayType(Aeria_Syntax_Tree.TProperty.value)(v1)(v2))(function () {
                        return traverse_(collectionHasProperty$prime)(v2.value1);
                    });
                };
                return throwDiagnostic(literalPos(v2))(new Aeria_Semantic_Error.PropertyError(v1, new Aeria_Semantic_Error.TypeMismatch([ Aeria_Syntax_Tree.TArray.value ], typeOf(v2))));
            };
        };
        var literalAttributes = fromFoldable([ new Data_Tuple.Tuple("indexes", sArrayType$prime), new Data_Tuple.Tuple("populate", sArrayType$prime), new Data_Tuple.Tuple("inline", sType([ Aeria_Syntax_Tree.TBoolean.value ])) ]);
        var sAttributes$prime = function (property$prime) {
            return sAttributes(property$prime)(literalAttributes)(exprAttributes);
        };
        return bind(ask)(function (context) {
            return discard1(when(Data_Maybe.isNothing(lookupCollection(context)(v)))(throwDiagnostic(v.value0)(new Aeria_Semantic_Error.PropertyError(property, new Aeria_Semantic_Error.UndefinedReference(v)))))(function () {
                return sAttributes$prime(property);
            });
        });
    };
};
var sProperty = function (collectionName) {
    return function (v) {
        if (v.value0.type_ instanceof Aeria_Syntax_Tree.PBoolean) {
            return sBooleanProperty(v);
        };
        if (v.value0.type_ instanceof Aeria_Syntax_Tree.PArray) {
            return sArrayProperty(collectionName)(v);
        };
        if (v.value0.type_ instanceof Aeria_Syntax_Tree.PObject) {
            return sObjectProperty(collectionName)(v);
        };
        if (v.value0.type_ instanceof Aeria_Syntax_Tree.PEnum) {
            return sEnumProperty(v);
        };
        if (v.value0.type_ instanceof Aeria_Syntax_Tree.PString) {
            return sStringProperty(v);
        };
        if (v.value0.type_ instanceof Aeria_Syntax_Tree.PFloat) {
            return sNumberProperty(v);
        };
        if (v.value0.type_ instanceof Aeria_Syntax_Tree.PInteger) {
            return sNumberProperty(v);
        };
        if (v.value0.type_ instanceof Aeria_Syntax_Tree.PRef && v.value0.type_.value1.value1 === "file") {
            return sFileProperty(v);
        };
        if (v.value0.type_ instanceof Aeria_Syntax_Tree.PRef) {
            return sRefProperty(v.value0.type_.value1)(v);
        };
        throw new Error("Failed pattern match at Aeria.Semantic (line 313, column 3 - line 322, column 44): " + [ v.value0.type_.constructor.name ]);
    };
};
var sObjectProperty = function (v) {
    var sAttributes$prime = function (idx) {
        return function (v1) {
            if (Data_List.length(v1.value0.attributes) > 0) {
                return throwDiagnostic(v1.value0.span)(new Aeria_Semantic_Error.PropertyError(v1, Aeria_Semantic_Error.PropertyTypeDoesNotExpectAttributes.value));
            };
            if (Data_Boolean.otherwise) {
                if (v1.value0.type_ instanceof Aeria_Syntax_Tree.PObject) {
                    var objectName = new Aeria_Syntax_Tree.CollectionName(v1.value0.span, v.value1 + show(idx));
                    return bind(bind(ask)(extendContext(objectName)(v1.value0.type_.value2)(Data_List_Types.Nil.value)))(function (context) {
                        return local(Data_Function["const"](context))(discard1(sRequired(objectName)(v1.value0.type_.value1))(function () {
                            return traverse_(sProperty(objectName))(v1.value0.type_.value2);
                        }));
                    });
                };
                return throwDiagnostic(v1.value0.span)(new Aeria_Semantic_Error.PropertyError(v1, Aeria_Semantic_Error.PropertyTypeDoesNotExpectType.value));
            };
            throw new Error("Failed pattern match at Aeria.Semantic (line 345, column 5 - line 356, column 91): " + [ idx.constructor.name, v1.constructor.name ]);
        };
    };
    return sAttributes$prime(0);
};
var sArrayProperty = function (collectionName) {
    var sAttributes$prime = function (v) {
        if (v.value0.type_ instanceof Aeria_Syntax_Tree.PArray) {
            if (v.value0.type_.value1 instanceof Aeria_Syntax_Tree.PObject) {
                return sObjectProperty(collectionName)(new Aeria_Syntax_Tree.Property({
                    span: v.value0.type_.value0,
                    type_: v.value0.type_.value1,
                    attributes: v.value0.attributes,
                    name: v.value0.name
                }));
            };
            return sProperty(collectionName)(new Aeria_Syntax_Tree.Property({
                span: v.value0.type_.value0,
                type_: v.value0.type_.value1,
                attributes: v.value0.attributes,
                name: v.value0.name
            }));
        };
        return throwDiagnostic(v.value0.span)(new Aeria_Semantic_Error.PropertyError(v, Aeria_Semantic_Error.PropertyTypeDoesNotExpectType.value));
    };
    return sAttributes$prime;
};
var sProperties = function (collectionName) {
    return traverse_(sProperty(collectionName));
};
var sCollection = function (v) {
    return bind(bind(ask)(extendContext(v.value0.name)(v.value0.properties)(v.value0.getters)))(function (context) {
        return local(Data_Function["const"](context))(discard1(sProperties(v.value0.name)(v.value0.properties))(function () {
            return discard1(sRequired(v.value0.name)(v.value0.required))(function () {
                return discard1(sGetters(v.value0.name)(v.value0.getters))(function () {
                    return discard1(sTable(v.value0.name)(v.value0.table))(function () {
                        return discard1(sTableMeta(v.value0.name)(v.value0.tableMeta))(function () {
                            return discard1(sForm(v.value0.name)(v.value0.form))(function () {
                                return discard1(sFilters(v.value0.name)(v.value0.filters))(function () {
                                    return discard1(sIndexes(v.value0.name)(v.value0.indexes))(function () {
                                        return discard1(sLayout(v.value0.name)(v.value0.layout))(function () {
                                            return discard1(sFiltersPresets(v.value0.name)(v.value0.filtersPresets))(function () {
                                                return discard1(sWritable(v.value0.name)(v.value0.writable))(function () {
                                                    return discard1(sSecurity(v.value0.functions)(v.value0.security))(function () {
                                                        return discard1(sImmutable(v.value0.name)(v.value0.immutable))(function () {
                                                            return discard1((function () {
                                                                if (v.value0.search instanceof Data_Maybe.Just) {
                                                                    return sSearch(v.value0.name)(v.value0.search.value0);
                                                                };
                                                                if (v.value0.search instanceof Data_Maybe.Nothing) {
                                                                    return pure(Data_Unit.unit);
                                                                };
                                                                throw new Error("Failed pattern match at Aeria.Semantic (line 189, column 5 - line 191, column 27): " + [ v.value0.search.constructor.name ]);
                                                            })())(function () {
                                                                return ask;
                                                            });
                                                        });
                                                    });
                                                });
                                            });
                                        });
                                    });
                                });
                            });
                        });
                    });
                });
            });
        }));
    });
};
var sProgram = function (v) {
    var go = function (context) {
        return function (collection) {
            return local(Data_Function["const"](context))(sCollection(collection));
        };
    };
    return bind(ask)(function (context) {
        return bind(foldM(go)(context)(v.value0.collections))(function () {
            return pure(Data_Unit.unit);
        });
    });
};
var runSemantic = function (filepath) {
    return function (source) {
        return function (program) {
            var semantic = Control_Monad_Reader_Trans.runReaderT(sProgram(program))(emptyContext(filepath)(source));
            return Control_Monad_Except.runExcept(semantic);
        };
    };
};
export {
    CollectionContext,
    Context,
    emptyContext,
    extendContext,
    lookupProperty,
    lookupGetter,
    lookupCollection,
    collectionHasProperty,
    makeDiagnostic,
    throwDiagnostic,
    sExpr,
    sCollection,
    sFiltersPresets,
    sLayout,
    sSearch,
    sSecurity,
    sRequired,
    sTable,
    sTableMeta,
    sFilters,
    sForm,
    sIndexes,
    sWritable,
    sImmutable,
    sCheckIfPropertiesIsValid,
    sGetters,
    sProperties,
    sProperty,
    sBooleanProperty,
    sArrayProperty,
    sObjectProperty,
    sRefProperty,
    sFileProperty,
    sType,
    sArrayType,
    sEnumProperty,
    sNumberProperty,
    typeOfArray,
    typeOf,
    literalPos,
    sStringProperty,
    sAttributes,
    sProgram,
    runSemantic
};
